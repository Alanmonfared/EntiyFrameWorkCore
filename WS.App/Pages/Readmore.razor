@page "/product/{id}"
@using System.Threading



   

<div class="container">


    <div class=" mb-5">
        <div class="container-fluid  ">

            <div class="card-body d-flex justify-content-center align-content-center mt-5 ">

                <div class="bg-image hover-overlay  mb-5 mt-3 col-5 mx-5" data-mdb-ripple-color="light">
                    <img src="@Item.Img" class="img-fluid" />

                </div>
              

                <div>
                    <h2 class="card-title mb-3 ">@Item.Name</h2>
                    <h3 class="card-text">@Item.ShortDescription</h3>

                    <p class="card-text">@Item.LongDescription</p>



                    <div class="d-flex justify-content-between align-items-center mt-5 ">
                        <i class="">In stock: @Item.InStock</i>
                        <span class="text-red ">@Item.Price.ToString() SEK</span>
                    </div>

                    <div class="d-flex justify-content-center align-content-center ">
                        <NavLink href="ReadMore" type="button" class="btn btn-success hov btn-lg mt-5 col-10 ">Buy</NavLink>
                    </div>
                </div>

              

            </div>
        </div>


    </div>

</div>


@code {

    [Parameter]
    public string Id { get; set; }

    public Product Item { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Item = await Http.GetFromJsonAsync<Product>($"https://localhost:44356/api/Products/{Id}");
    }


}
